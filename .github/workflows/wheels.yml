name: Wheels

on:
  workflow_dispatch:
  # pull_request:
  # push:  # Disabled since it uses all my GitHub Actions time
  #   branches:
  #    - main
  release:
    types:
      - published

env:
  CIBW_TEST_COMMAND: pytest {project}/tests
  CIBW_TEST_EXTRAS: test

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Build SDist
      run: pipx run build --sdist
    - name: Check metadata
      run: pipx run twine check dist/*
    - uses: actions/upload-artifact@v4
      with:
        path: dist/*.tar.gz

  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'release'
    strategy:
      fail-fast: false
      matrix:
        os: ["macOS-latest", "ubuntu-latest", "windows-latest"]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Build and install
      run: python -m pip install --verbose ".[test]"
    - name: Remove CMake build directory (1/2)
      uses: JesseTG/rm@v1.0.3
      with:
        path: ./build
    - name: Remove CMake build directory (2/2)
      uses: JesseTG/rm@v1.0.3
      with:
        path: ./_skbuild
    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==2.16.5
    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_PROJECT_REQUIRES_PYTHON: ">=3.8.0"
        CIBW_BUILD: "cp3*"
        CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
        CIBW_ARCHS_LINUX: "auto64"
        CIBW_ARCHS_WINDOWS: "x86 AMD64"
        CIBW_TEST_SKIP: "*-macosx_arm64 *-macosx_universal2:arm64"
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - uses: actions/download-artifact@v4.2.1
      with:
        name: artifact
        path: dist
    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
